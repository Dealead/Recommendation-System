####Creating a File (TS) for Routing

// /lib/routes/crmRoutes.ts
import {Request, Response} from "express";

export class Routes {       
    public routes(app): void {          
        app.route('/')
        .get((req: Request, res: Response) => {            
            res.status(200).send({
                message: 'GET request successfulll!!!!'
            })
        })               
    }
}





####importing this route to the lib/app.ts.

// /lib/app.ts
import * as express from "express";
import * as bodyParser from "body-parser";
import { Routes } from "./routes/crmRoutes";

class App {

    public app: express.Application;
    public routePrv: Routes = new Routes();
    
    constructor() {
        this.app = express();
        this.config();        
        this.routePrv.routes(this.app);     
    }

    private config(): void{
        this.app.use(bodyParser.json());
        this.app.use(bodyParser.urlencoded({ extended: false }));
    }
}






####Building CRUD for the Web APIs

// /lib/routes/crmRoutes.ts
import {Request, Response} from "express";

export class Routes {    
    
    public routes(app): void {   
        
        app.route('/')
        .get((req: Request, res: Response) => {            
            res.status(200).send({
                message: 'GET request successfulll!!!!'
            })
        })
        
        // Products 
        app.route('/Products') 
        // GET endpoint 
        .get((req: Request, res: Response) => {
        // Get all Products            
            res.status(200).send({
                message: 'GET request successfulll!!!!'
            })
        })        
        // POST endpoint
        .post((req: Request, res: Response) => {   
        // Signup         
            res.status(200).send({
                message: 'POST request successfulll!!!!'
            })
        })

        // Products detail
        app.route('/Products/:ProductsId')
        // get specific Products
        .get((req: Request, res: Response) => {
        // Get a single Products detail            
            res.status(200).send({
                message: 'GET request successfulll!!!!'
            })
        })
        .put((req: Request, res: Response) => {
        // Update a Products           
            res.status(200).send({
                message: 'PUT request successfulll!!!!'
            })
        })
        .delete((req: Request, res: Response) => {       
        // Delete Products     
            res.status(200).send({
                message: 'DELETE request successfulll!!!!'
            })
        })
    }
}


